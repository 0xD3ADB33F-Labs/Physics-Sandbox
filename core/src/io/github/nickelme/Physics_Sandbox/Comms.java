// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Comms.proto

package io.github.nickelme.Physics_Sandbox;

public final class Comms {
  private Comms() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.packet);
    registry.add(io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.packet);
  }
  public interface PSPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Physics_Sandbox.PSPacket)
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<PSPacket> {

    /**
     * <code>required .Physics_Sandbox.PSPacket.PacketType PacketId = 1;</code>
     */
    boolean hasPacketId();
    /**
     * <code>required .Physics_Sandbox.PSPacket.PacketType PacketId = 1;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType getPacketId();
  }
  /**
   * Protobuf type {@code Physics_Sandbox.PSPacket}
   */
  public static final class PSPacket extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        PSPacket> implements
      // @@protoc_insertion_point(message_implements:Physics_Sandbox.PSPacket)
      PSPacketOrBuilder {
    // Use PSPacket.newBuilder() to construct.
    private PSPacket(com.google.protobuf.GeneratedMessage.ExtendableBuilder<io.github.nickelme.Physics_Sandbox.Comms.PSPacket, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PSPacket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PSPacket defaultInstance;
    public static PSPacket getDefaultInstance() {
      return defaultInstance;
    }

    public PSPacket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PSPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType value = io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSPacket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.nickelme.Physics_Sandbox.Comms.PSPacket.class, io.github.nickelme.Physics_Sandbox.Comms.PSPacket.Builder.class);
    }

    public static com.google.protobuf.Parser<PSPacket> PARSER =
        new com.google.protobuf.AbstractParser<PSPacket>() {
      public PSPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PSPacket(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PSPacket> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Physics_Sandbox.PSPacket.PacketType}
     */
    public enum PacketType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SEND_OBJECTS = 0;</code>
       */
      SEND_OBJECTS(0, 0),
      /**
       * <code>UPDATE_OBJECTS = 1;</code>
       */
      UPDATE_OBJECTS(1, 1),
      ;

      /**
       * <code>SEND_OBJECTS = 0;</code>
       */
      public static final int SEND_OBJECTS_VALUE = 0;
      /**
       * <code>UPDATE_OBJECTS = 1;</code>
       */
      public static final int UPDATE_OBJECTS_VALUE = 1;


      public final int getNumber() { return value; }

      public static PacketType valueOf(int value) {
        switch (value) {
          case 0: return SEND_OBJECTS;
          case 1: return UPDATE_OBJECTS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PacketType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<PacketType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PacketType>() {
              public PacketType findValueByNumber(int number) {
                return PacketType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.github.nickelme.Physics_Sandbox.Comms.PSPacket.getDescriptor().getEnumTypes().get(0);
      }

      private static final PacketType[] VALUES = values();

      public static PacketType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private PacketType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Physics_Sandbox.PSPacket.PacketType)
    }

    private int bitField0_;
    public static final int PACKETID_FIELD_NUMBER = 1;
    private io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType packetId_;
    /**
     * <code>required .Physics_Sandbox.PSPacket.PacketType PacketId = 1;</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Physics_Sandbox.PSPacket.PacketType PacketId = 1;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType getPacketId() {
      return packetId_;
    }

    private void initFields() {
      packetId_ = io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType.SEND_OBJECTS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPacketId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<io.github.nickelme.Physics_Sandbox.Comms.PSPacket>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.github.nickelme.Physics_Sandbox.Comms.PSPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Physics_Sandbox.PSPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.PSPacket, Builder> implements
        // @@protoc_insertion_point(builder_implements:Physics_Sandbox.PSPacket)
        io.github.nickelme.Physics_Sandbox.Comms.PSPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSPacket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.github.nickelme.Physics_Sandbox.Comms.PSPacket.class, io.github.nickelme.Physics_Sandbox.Comms.PSPacket.Builder.class);
      }

      // Construct using io.github.nickelme.Physics_Sandbox.Comms.PSPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType.SEND_OBJECTS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSPacket_descriptor;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSPacket getDefaultInstanceForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.PSPacket.getDefaultInstance();
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSPacket build() {
        io.github.nickelme.Physics_Sandbox.Comms.PSPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSPacket buildPartial() {
        io.github.nickelme.Physics_Sandbox.Comms.PSPacket result = new io.github.nickelme.Physics_Sandbox.Comms.PSPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.github.nickelme.Physics_Sandbox.Comms.PSPacket) {
          return mergeFrom((io.github.nickelme.Physics_Sandbox.Comms.PSPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.github.nickelme.Physics_Sandbox.Comms.PSPacket other) {
        if (other == io.github.nickelme.Physics_Sandbox.Comms.PSPacket.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPacketId()) {
          
          return false;
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.github.nickelme.Physics_Sandbox.Comms.PSPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.github.nickelme.Physics_Sandbox.Comms.PSPacket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType packetId_ = io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType.SEND_OBJECTS;
      /**
       * <code>required .Physics_Sandbox.PSPacket.PacketType PacketId = 1;</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Physics_Sandbox.PSPacket.PacketType PacketId = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType getPacketId() {
        return packetId_;
      }
      /**
       * <code>required .Physics_Sandbox.PSPacket.PacketType PacketId = 1;</code>
       */
      public Builder setPacketId(io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Physics_Sandbox.PSPacket.PacketType PacketId = 1;</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = io.github.nickelme.Physics_Sandbox.Comms.PSPacket.PacketType.SEND_OBJECTS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Physics_Sandbox.PSPacket)
    }

    static {
      defaultInstance = new PSPacket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Physics_Sandbox.PSPacket)
  }

  public interface Vector3OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Physics_Sandbox.Vector3)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float X = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required float X = 1;</code>
     */
    float getX();

    /**
     * <code>required float Y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required float Y = 2;</code>
     */
    float getY();

    /**
     * <code>required float Z = 3;</code>
     */
    boolean hasZ();
    /**
     * <code>required float Z = 3;</code>
     */
    float getZ();
  }
  /**
   * Protobuf type {@code Physics_Sandbox.Vector3}
   */
  public static final class Vector3 extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Physics_Sandbox.Vector3)
      Vector3OrBuilder {
    // Use Vector3.newBuilder() to construct.
    private Vector3(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Vector3(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Vector3 defaultInstance;
    public static Vector3 getDefaultInstance() {
      return defaultInstance;
    }

    public Vector3 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Vector3(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              z_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Vector3_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Vector3_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.nickelme.Physics_Sandbox.Comms.Vector3.class, io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder.class);
    }

    public static com.google.protobuf.Parser<Vector3> PARSER =
        new com.google.protobuf.AbstractParser<Vector3>() {
      public Vector3 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector3(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Vector3> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>required float X = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float X = 1;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>required float Y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float Y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    public static final int Z_FIELD_NUMBER = 3;
    private float z_;
    /**
     * <code>required float Z = 3;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float Z = 3;</code>
     */
    public float getZ() {
      return z_;
    }

    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, z_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, z_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Vector3 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.github.nickelme.Physics_Sandbox.Comms.Vector3 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Physics_Sandbox.Vector3}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Physics_Sandbox.Vector3)
        io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Vector3_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Vector3_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.github.nickelme.Physics_Sandbox.Comms.Vector3.class, io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder.class);
      }

      // Construct using io.github.nickelme.Physics_Sandbox.Comms.Vector3.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Vector3_descriptor;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.Vector3 getDefaultInstanceForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance();
      }

      public io.github.nickelme.Physics_Sandbox.Comms.Vector3 build() {
        io.github.nickelme.Physics_Sandbox.Comms.Vector3 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.Vector3 buildPartial() {
        io.github.nickelme.Physics_Sandbox.Comms.Vector3 result = new io.github.nickelme.Physics_Sandbox.Comms.Vector3(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.github.nickelme.Physics_Sandbox.Comms.Vector3) {
          return mergeFrom((io.github.nickelme.Physics_Sandbox.Comms.Vector3)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.github.nickelme.Physics_Sandbox.Comms.Vector3 other) {
        if (other == io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasZ()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.github.nickelme.Physics_Sandbox.Comms.Vector3 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.github.nickelme.Physics_Sandbox.Comms.Vector3) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float x_ ;
      /**
       * <code>required float X = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float X = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>required float X = 1;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float X = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>required float Y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float Y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>required float Y = 2;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float Y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      private float z_ ;
      /**
       * <code>required float Z = 3;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float Z = 3;</code>
       */
      public float getZ() {
        return z_;
      }
      /**
       * <code>required float Z = 3;</code>
       */
      public Builder setZ(float value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float Z = 3;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Physics_Sandbox.Vector3)
    }

    static {
      defaultInstance = new Vector3(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Physics_Sandbox.Vector3)
  }

  public interface Matrix4OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Physics_Sandbox.Matrix4)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float m00 = 1;</code>
     */
    boolean hasM00();
    /**
     * <code>required float m00 = 1;</code>
     */
    float getM00();

    /**
     * <code>required float m01 = 2;</code>
     */
    boolean hasM01();
    /**
     * <code>required float m01 = 2;</code>
     */
    float getM01();

    /**
     * <code>required float m02 = 3;</code>
     */
    boolean hasM02();
    /**
     * <code>required float m02 = 3;</code>
     */
    float getM02();

    /**
     * <code>required float m03 = 4;</code>
     */
    boolean hasM03();
    /**
     * <code>required float m03 = 4;</code>
     */
    float getM03();

    /**
     * <code>required float m10 = 5;</code>
     */
    boolean hasM10();
    /**
     * <code>required float m10 = 5;</code>
     */
    float getM10();

    /**
     * <code>required float m11 = 6;</code>
     */
    boolean hasM11();
    /**
     * <code>required float m11 = 6;</code>
     */
    float getM11();

    /**
     * <code>required float m12 = 7;</code>
     */
    boolean hasM12();
    /**
     * <code>required float m12 = 7;</code>
     */
    float getM12();

    /**
     * <code>required float m13 = 8;</code>
     */
    boolean hasM13();
    /**
     * <code>required float m13 = 8;</code>
     */
    float getM13();

    /**
     * <code>required float m20 = 9;</code>
     */
    boolean hasM20();
    /**
     * <code>required float m20 = 9;</code>
     */
    float getM20();

    /**
     * <code>required float m21 = 10;</code>
     */
    boolean hasM21();
    /**
     * <code>required float m21 = 10;</code>
     */
    float getM21();

    /**
     * <code>required float m22 = 11;</code>
     */
    boolean hasM22();
    /**
     * <code>required float m22 = 11;</code>
     */
    float getM22();

    /**
     * <code>required float m23 = 12;</code>
     */
    boolean hasM23();
    /**
     * <code>required float m23 = 12;</code>
     */
    float getM23();

    /**
     * <code>required float m30 = 13;</code>
     */
    boolean hasM30();
    /**
     * <code>required float m30 = 13;</code>
     */
    float getM30();

    /**
     * <code>required float m31 = 14;</code>
     */
    boolean hasM31();
    /**
     * <code>required float m31 = 14;</code>
     */
    float getM31();

    /**
     * <code>required float m32 = 15;</code>
     */
    boolean hasM32();
    /**
     * <code>required float m32 = 15;</code>
     */
    float getM32();

    /**
     * <code>required float m33 = 16;</code>
     */
    boolean hasM33();
    /**
     * <code>required float m33 = 16;</code>
     */
    float getM33();
  }
  /**
   * Protobuf type {@code Physics_Sandbox.Matrix4}
   */
  public static final class Matrix4 extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Physics_Sandbox.Matrix4)
      Matrix4OrBuilder {
    // Use Matrix4.newBuilder() to construct.
    private Matrix4(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Matrix4(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Matrix4 defaultInstance;
    public static Matrix4 getDefaultInstance() {
      return defaultInstance;
    }

    public Matrix4 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Matrix4(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              m00_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              m01_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              m02_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              m03_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              m10_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              m11_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              m12_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              m13_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              m20_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              m21_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              m22_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              m23_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              m30_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              m31_ = input.readFloat();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              m32_ = input.readFloat();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              m33_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Matrix4_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Matrix4_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.nickelme.Physics_Sandbox.Comms.Matrix4.class, io.github.nickelme.Physics_Sandbox.Comms.Matrix4.Builder.class);
    }

    public static com.google.protobuf.Parser<Matrix4> PARSER =
        new com.google.protobuf.AbstractParser<Matrix4>() {
      public Matrix4 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Matrix4(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Matrix4> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int M00_FIELD_NUMBER = 1;
    private float m00_;
    /**
     * <code>required float m00 = 1;</code>
     */
    public boolean hasM00() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float m00 = 1;</code>
     */
    public float getM00() {
      return m00_;
    }

    public static final int M01_FIELD_NUMBER = 2;
    private float m01_;
    /**
     * <code>required float m01 = 2;</code>
     */
    public boolean hasM01() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float m01 = 2;</code>
     */
    public float getM01() {
      return m01_;
    }

    public static final int M02_FIELD_NUMBER = 3;
    private float m02_;
    /**
     * <code>required float m02 = 3;</code>
     */
    public boolean hasM02() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float m02 = 3;</code>
     */
    public float getM02() {
      return m02_;
    }

    public static final int M03_FIELD_NUMBER = 4;
    private float m03_;
    /**
     * <code>required float m03 = 4;</code>
     */
    public boolean hasM03() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float m03 = 4;</code>
     */
    public float getM03() {
      return m03_;
    }

    public static final int M10_FIELD_NUMBER = 5;
    private float m10_;
    /**
     * <code>required float m10 = 5;</code>
     */
    public boolean hasM10() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required float m10 = 5;</code>
     */
    public float getM10() {
      return m10_;
    }

    public static final int M11_FIELD_NUMBER = 6;
    private float m11_;
    /**
     * <code>required float m11 = 6;</code>
     */
    public boolean hasM11() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float m11 = 6;</code>
     */
    public float getM11() {
      return m11_;
    }

    public static final int M12_FIELD_NUMBER = 7;
    private float m12_;
    /**
     * <code>required float m12 = 7;</code>
     */
    public boolean hasM12() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float m12 = 7;</code>
     */
    public float getM12() {
      return m12_;
    }

    public static final int M13_FIELD_NUMBER = 8;
    private float m13_;
    /**
     * <code>required float m13 = 8;</code>
     */
    public boolean hasM13() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required float m13 = 8;</code>
     */
    public float getM13() {
      return m13_;
    }

    public static final int M20_FIELD_NUMBER = 9;
    private float m20_;
    /**
     * <code>required float m20 = 9;</code>
     */
    public boolean hasM20() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required float m20 = 9;</code>
     */
    public float getM20() {
      return m20_;
    }

    public static final int M21_FIELD_NUMBER = 10;
    private float m21_;
    /**
     * <code>required float m21 = 10;</code>
     */
    public boolean hasM21() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required float m21 = 10;</code>
     */
    public float getM21() {
      return m21_;
    }

    public static final int M22_FIELD_NUMBER = 11;
    private float m22_;
    /**
     * <code>required float m22 = 11;</code>
     */
    public boolean hasM22() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required float m22 = 11;</code>
     */
    public float getM22() {
      return m22_;
    }

    public static final int M23_FIELD_NUMBER = 12;
    private float m23_;
    /**
     * <code>required float m23 = 12;</code>
     */
    public boolean hasM23() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required float m23 = 12;</code>
     */
    public float getM23() {
      return m23_;
    }

    public static final int M30_FIELD_NUMBER = 13;
    private float m30_;
    /**
     * <code>required float m30 = 13;</code>
     */
    public boolean hasM30() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required float m30 = 13;</code>
     */
    public float getM30() {
      return m30_;
    }

    public static final int M31_FIELD_NUMBER = 14;
    private float m31_;
    /**
     * <code>required float m31 = 14;</code>
     */
    public boolean hasM31() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required float m31 = 14;</code>
     */
    public float getM31() {
      return m31_;
    }

    public static final int M32_FIELD_NUMBER = 15;
    private float m32_;
    /**
     * <code>required float m32 = 15;</code>
     */
    public boolean hasM32() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required float m32 = 15;</code>
     */
    public float getM32() {
      return m32_;
    }

    public static final int M33_FIELD_NUMBER = 16;
    private float m33_;
    /**
     * <code>required float m33 = 16;</code>
     */
    public boolean hasM33() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required float m33 = 16;</code>
     */
    public float getM33() {
      return m33_;
    }

    private void initFields() {
      m00_ = 0F;
      m01_ = 0F;
      m02_ = 0F;
      m03_ = 0F;
      m10_ = 0F;
      m11_ = 0F;
      m12_ = 0F;
      m13_ = 0F;
      m20_ = 0F;
      m21_ = 0F;
      m22_ = 0F;
      m23_ = 0F;
      m30_ = 0F;
      m31_ = 0F;
      m32_ = 0F;
      m33_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasM00()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM01()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM02()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM03()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM10()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM11()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM12()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM13()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM20()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM21()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM22()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM23()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM30()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM31()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM32()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasM33()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, m00_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, m01_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, m02_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, m03_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, m10_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, m11_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, m12_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, m13_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, m20_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, m21_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, m22_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, m23_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, m30_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, m31_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, m32_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, m33_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, m00_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, m01_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, m02_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, m03_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, m10_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, m11_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, m12_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, m13_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, m20_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, m21_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, m22_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, m23_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, m30_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, m31_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, m32_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, m33_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.github.nickelme.Physics_Sandbox.Comms.Matrix4 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Physics_Sandbox.Matrix4}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Physics_Sandbox.Matrix4)
        io.github.nickelme.Physics_Sandbox.Comms.Matrix4OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Matrix4_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Matrix4_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.github.nickelme.Physics_Sandbox.Comms.Matrix4.class, io.github.nickelme.Physics_Sandbox.Comms.Matrix4.Builder.class);
      }

      // Construct using io.github.nickelme.Physics_Sandbox.Comms.Matrix4.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        m00_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        m01_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        m02_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        m03_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        m10_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        m11_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        m12_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        m13_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        m20_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        m21_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        m22_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        m23_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        m30_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        m31_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        m32_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        m33_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_Matrix4_descriptor;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.Matrix4 getDefaultInstanceForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.Matrix4.getDefaultInstance();
      }

      public io.github.nickelme.Physics_Sandbox.Comms.Matrix4 build() {
        io.github.nickelme.Physics_Sandbox.Comms.Matrix4 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.Matrix4 buildPartial() {
        io.github.nickelme.Physics_Sandbox.Comms.Matrix4 result = new io.github.nickelme.Physics_Sandbox.Comms.Matrix4(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.m00_ = m00_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.m01_ = m01_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.m02_ = m02_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.m03_ = m03_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.m10_ = m10_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.m11_ = m11_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.m12_ = m12_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.m13_ = m13_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.m20_ = m20_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.m21_ = m21_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.m22_ = m22_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.m23_ = m23_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.m30_ = m30_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.m31_ = m31_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.m32_ = m32_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.m33_ = m33_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.github.nickelme.Physics_Sandbox.Comms.Matrix4) {
          return mergeFrom((io.github.nickelme.Physics_Sandbox.Comms.Matrix4)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.github.nickelme.Physics_Sandbox.Comms.Matrix4 other) {
        if (other == io.github.nickelme.Physics_Sandbox.Comms.Matrix4.getDefaultInstance()) return this;
        if (other.hasM00()) {
          setM00(other.getM00());
        }
        if (other.hasM01()) {
          setM01(other.getM01());
        }
        if (other.hasM02()) {
          setM02(other.getM02());
        }
        if (other.hasM03()) {
          setM03(other.getM03());
        }
        if (other.hasM10()) {
          setM10(other.getM10());
        }
        if (other.hasM11()) {
          setM11(other.getM11());
        }
        if (other.hasM12()) {
          setM12(other.getM12());
        }
        if (other.hasM13()) {
          setM13(other.getM13());
        }
        if (other.hasM20()) {
          setM20(other.getM20());
        }
        if (other.hasM21()) {
          setM21(other.getM21());
        }
        if (other.hasM22()) {
          setM22(other.getM22());
        }
        if (other.hasM23()) {
          setM23(other.getM23());
        }
        if (other.hasM30()) {
          setM30(other.getM30());
        }
        if (other.hasM31()) {
          setM31(other.getM31());
        }
        if (other.hasM32()) {
          setM32(other.getM32());
        }
        if (other.hasM33()) {
          setM33(other.getM33());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasM00()) {
          
          return false;
        }
        if (!hasM01()) {
          
          return false;
        }
        if (!hasM02()) {
          
          return false;
        }
        if (!hasM03()) {
          
          return false;
        }
        if (!hasM10()) {
          
          return false;
        }
        if (!hasM11()) {
          
          return false;
        }
        if (!hasM12()) {
          
          return false;
        }
        if (!hasM13()) {
          
          return false;
        }
        if (!hasM20()) {
          
          return false;
        }
        if (!hasM21()) {
          
          return false;
        }
        if (!hasM22()) {
          
          return false;
        }
        if (!hasM23()) {
          
          return false;
        }
        if (!hasM30()) {
          
          return false;
        }
        if (!hasM31()) {
          
          return false;
        }
        if (!hasM32()) {
          
          return false;
        }
        if (!hasM33()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.github.nickelme.Physics_Sandbox.Comms.Matrix4 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.github.nickelme.Physics_Sandbox.Comms.Matrix4) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float m00_ ;
      /**
       * <code>required float m00 = 1;</code>
       */
      public boolean hasM00() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float m00 = 1;</code>
       */
      public float getM00() {
        return m00_;
      }
      /**
       * <code>required float m00 = 1;</code>
       */
      public Builder setM00(float value) {
        bitField0_ |= 0x00000001;
        m00_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m00 = 1;</code>
       */
      public Builder clearM00() {
        bitField0_ = (bitField0_ & ~0x00000001);
        m00_ = 0F;
        onChanged();
        return this;
      }

      private float m01_ ;
      /**
       * <code>required float m01 = 2;</code>
       */
      public boolean hasM01() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float m01 = 2;</code>
       */
      public float getM01() {
        return m01_;
      }
      /**
       * <code>required float m01 = 2;</code>
       */
      public Builder setM01(float value) {
        bitField0_ |= 0x00000002;
        m01_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m01 = 2;</code>
       */
      public Builder clearM01() {
        bitField0_ = (bitField0_ & ~0x00000002);
        m01_ = 0F;
        onChanged();
        return this;
      }

      private float m02_ ;
      /**
       * <code>required float m02 = 3;</code>
       */
      public boolean hasM02() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float m02 = 3;</code>
       */
      public float getM02() {
        return m02_;
      }
      /**
       * <code>required float m02 = 3;</code>
       */
      public Builder setM02(float value) {
        bitField0_ |= 0x00000004;
        m02_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m02 = 3;</code>
       */
      public Builder clearM02() {
        bitField0_ = (bitField0_ & ~0x00000004);
        m02_ = 0F;
        onChanged();
        return this;
      }

      private float m03_ ;
      /**
       * <code>required float m03 = 4;</code>
       */
      public boolean hasM03() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float m03 = 4;</code>
       */
      public float getM03() {
        return m03_;
      }
      /**
       * <code>required float m03 = 4;</code>
       */
      public Builder setM03(float value) {
        bitField0_ |= 0x00000008;
        m03_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m03 = 4;</code>
       */
      public Builder clearM03() {
        bitField0_ = (bitField0_ & ~0x00000008);
        m03_ = 0F;
        onChanged();
        return this;
      }

      private float m10_ ;
      /**
       * <code>required float m10 = 5;</code>
       */
      public boolean hasM10() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required float m10 = 5;</code>
       */
      public float getM10() {
        return m10_;
      }
      /**
       * <code>required float m10 = 5;</code>
       */
      public Builder setM10(float value) {
        bitField0_ |= 0x00000010;
        m10_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m10 = 5;</code>
       */
      public Builder clearM10() {
        bitField0_ = (bitField0_ & ~0x00000010);
        m10_ = 0F;
        onChanged();
        return this;
      }

      private float m11_ ;
      /**
       * <code>required float m11 = 6;</code>
       */
      public boolean hasM11() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float m11 = 6;</code>
       */
      public float getM11() {
        return m11_;
      }
      /**
       * <code>required float m11 = 6;</code>
       */
      public Builder setM11(float value) {
        bitField0_ |= 0x00000020;
        m11_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m11 = 6;</code>
       */
      public Builder clearM11() {
        bitField0_ = (bitField0_ & ~0x00000020);
        m11_ = 0F;
        onChanged();
        return this;
      }

      private float m12_ ;
      /**
       * <code>required float m12 = 7;</code>
       */
      public boolean hasM12() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float m12 = 7;</code>
       */
      public float getM12() {
        return m12_;
      }
      /**
       * <code>required float m12 = 7;</code>
       */
      public Builder setM12(float value) {
        bitField0_ |= 0x00000040;
        m12_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m12 = 7;</code>
       */
      public Builder clearM12() {
        bitField0_ = (bitField0_ & ~0x00000040);
        m12_ = 0F;
        onChanged();
        return this;
      }

      private float m13_ ;
      /**
       * <code>required float m13 = 8;</code>
       */
      public boolean hasM13() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required float m13 = 8;</code>
       */
      public float getM13() {
        return m13_;
      }
      /**
       * <code>required float m13 = 8;</code>
       */
      public Builder setM13(float value) {
        bitField0_ |= 0x00000080;
        m13_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m13 = 8;</code>
       */
      public Builder clearM13() {
        bitField0_ = (bitField0_ & ~0x00000080);
        m13_ = 0F;
        onChanged();
        return this;
      }

      private float m20_ ;
      /**
       * <code>required float m20 = 9;</code>
       */
      public boolean hasM20() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required float m20 = 9;</code>
       */
      public float getM20() {
        return m20_;
      }
      /**
       * <code>required float m20 = 9;</code>
       */
      public Builder setM20(float value) {
        bitField0_ |= 0x00000100;
        m20_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m20 = 9;</code>
       */
      public Builder clearM20() {
        bitField0_ = (bitField0_ & ~0x00000100);
        m20_ = 0F;
        onChanged();
        return this;
      }

      private float m21_ ;
      /**
       * <code>required float m21 = 10;</code>
       */
      public boolean hasM21() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required float m21 = 10;</code>
       */
      public float getM21() {
        return m21_;
      }
      /**
       * <code>required float m21 = 10;</code>
       */
      public Builder setM21(float value) {
        bitField0_ |= 0x00000200;
        m21_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m21 = 10;</code>
       */
      public Builder clearM21() {
        bitField0_ = (bitField0_ & ~0x00000200);
        m21_ = 0F;
        onChanged();
        return this;
      }

      private float m22_ ;
      /**
       * <code>required float m22 = 11;</code>
       */
      public boolean hasM22() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required float m22 = 11;</code>
       */
      public float getM22() {
        return m22_;
      }
      /**
       * <code>required float m22 = 11;</code>
       */
      public Builder setM22(float value) {
        bitField0_ |= 0x00000400;
        m22_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m22 = 11;</code>
       */
      public Builder clearM22() {
        bitField0_ = (bitField0_ & ~0x00000400);
        m22_ = 0F;
        onChanged();
        return this;
      }

      private float m23_ ;
      /**
       * <code>required float m23 = 12;</code>
       */
      public boolean hasM23() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required float m23 = 12;</code>
       */
      public float getM23() {
        return m23_;
      }
      /**
       * <code>required float m23 = 12;</code>
       */
      public Builder setM23(float value) {
        bitField0_ |= 0x00000800;
        m23_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m23 = 12;</code>
       */
      public Builder clearM23() {
        bitField0_ = (bitField0_ & ~0x00000800);
        m23_ = 0F;
        onChanged();
        return this;
      }

      private float m30_ ;
      /**
       * <code>required float m30 = 13;</code>
       */
      public boolean hasM30() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required float m30 = 13;</code>
       */
      public float getM30() {
        return m30_;
      }
      /**
       * <code>required float m30 = 13;</code>
       */
      public Builder setM30(float value) {
        bitField0_ |= 0x00001000;
        m30_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m30 = 13;</code>
       */
      public Builder clearM30() {
        bitField0_ = (bitField0_ & ~0x00001000);
        m30_ = 0F;
        onChanged();
        return this;
      }

      private float m31_ ;
      /**
       * <code>required float m31 = 14;</code>
       */
      public boolean hasM31() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required float m31 = 14;</code>
       */
      public float getM31() {
        return m31_;
      }
      /**
       * <code>required float m31 = 14;</code>
       */
      public Builder setM31(float value) {
        bitField0_ |= 0x00002000;
        m31_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m31 = 14;</code>
       */
      public Builder clearM31() {
        bitField0_ = (bitField0_ & ~0x00002000);
        m31_ = 0F;
        onChanged();
        return this;
      }

      private float m32_ ;
      /**
       * <code>required float m32 = 15;</code>
       */
      public boolean hasM32() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required float m32 = 15;</code>
       */
      public float getM32() {
        return m32_;
      }
      /**
       * <code>required float m32 = 15;</code>
       */
      public Builder setM32(float value) {
        bitField0_ |= 0x00004000;
        m32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m32 = 15;</code>
       */
      public Builder clearM32() {
        bitField0_ = (bitField0_ & ~0x00004000);
        m32_ = 0F;
        onChanged();
        return this;
      }

      private float m33_ ;
      /**
       * <code>required float m33 = 16;</code>
       */
      public boolean hasM33() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required float m33 = 16;</code>
       */
      public float getM33() {
        return m33_;
      }
      /**
       * <code>required float m33 = 16;</code>
       */
      public Builder setM33(float value) {
        bitField0_ |= 0x00008000;
        m33_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float m33 = 16;</code>
       */
      public Builder clearM33() {
        bitField0_ = (bitField0_ & ~0x00008000);
        m33_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Physics_Sandbox.Matrix4)
    }

    static {
      defaultInstance = new Matrix4(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Physics_Sandbox.Matrix4)
  }

  public interface PSObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Physics_Sandbox.PSObject)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Physics_Sandbox.PSObject.ObjectType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .Physics_Sandbox.PSObject.ObjectType type = 1;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType getType();

    /**
     * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
     */
    boolean hasLocation();
    /**
     * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.Matrix4 getLocation();
    /**
     * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.Matrix4OrBuilder getLocationOrBuilder();

    /**
     * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
     */
    boolean hasVelocity();
    /**
     * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.Vector3 getVelocity();
    /**
     * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder getVelocityOrBuilder();

    /**
     * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
     */
    boolean hasSize();
    /**
     * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.Vector3 getSize();
    /**
     * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder getSizeOrBuilder();

    /**
     * <code>required int64 UOID = 5;</code>
     */
    boolean hasUOID();
    /**
     * <code>required int64 UOID = 5;</code>
     */
    long getUOID();
  }
  /**
   * Protobuf type {@code Physics_Sandbox.PSObject}
   */
  public static final class PSObject extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Physics_Sandbox.PSObject)
      PSObjectOrBuilder {
    // Use PSObject.newBuilder() to construct.
    private PSObject(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PSObject(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PSObject defaultInstance;
    public static PSObject getDefaultInstance() {
      return defaultInstance;
    }

    public PSObject getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PSObject(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType value = io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              io.github.nickelme.Physics_Sandbox.Comms.Matrix4.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(io.github.nickelme.Physics_Sandbox.Comms.Matrix4.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = velocity_.toBuilder();
              }
              velocity_ = input.readMessage(io.github.nickelme.Physics_Sandbox.Comms.Vector3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(velocity_);
                velocity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = size_.toBuilder();
              }
              size_ = input.readMessage(io.github.nickelme.Physics_Sandbox.Comms.Vector3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(size_);
                size_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              uOID_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSObject_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.nickelme.Physics_Sandbox.Comms.PSObject.class, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder.class);
    }

    public static com.google.protobuf.Parser<PSObject> PARSER =
        new com.google.protobuf.AbstractParser<PSObject>() {
      public PSObject parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PSObject(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PSObject> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Physics_Sandbox.PSObject.ObjectType}
     */
    public enum ObjectType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CUBE = 0;</code>
       */
      CUBE(0, 0),
      /**
       * <code>SPHERE = 1;</code>
       */
      SPHERE(1, 1),
      ;

      /**
       * <code>CUBE = 0;</code>
       */
      public static final int CUBE_VALUE = 0;
      /**
       * <code>SPHERE = 1;</code>
       */
      public static final int SPHERE_VALUE = 1;


      public final int getNumber() { return value; }

      public static ObjectType valueOf(int value) {
        switch (value) {
          case 0: return CUBE;
          case 1: return SPHERE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ObjectType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ObjectType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ObjectType>() {
              public ObjectType findValueByNumber(int number) {
                return ObjectType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.github.nickelme.Physics_Sandbox.Comms.PSObject.getDescriptor().getEnumTypes().get(0);
      }

      private static final ObjectType[] VALUES = values();

      public static ObjectType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ObjectType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Physics_Sandbox.PSObject.ObjectType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType type_;
    /**
     * <code>optional .Physics_Sandbox.PSObject.ObjectType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Physics_Sandbox.PSObject.ObjectType type = 1;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType getType() {
      return type_;
    }

    public static final int LOCATION_FIELD_NUMBER = 2;
    private io.github.nickelme.Physics_Sandbox.Comms.Matrix4 location_;
    /**
     * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.Matrix4 getLocation() {
      return location_;
    }
    /**
     * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.Matrix4OrBuilder getLocationOrBuilder() {
      return location_;
    }

    public static final int VELOCITY_FIELD_NUMBER = 3;
    private io.github.nickelme.Physics_Sandbox.Comms.Vector3 velocity_;
    /**
     * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
     */
    public boolean hasVelocity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.Vector3 getVelocity() {
      return velocity_;
    }
    /**
     * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder getVelocityOrBuilder() {
      return velocity_;
    }

    public static final int SIZE_FIELD_NUMBER = 4;
    private io.github.nickelme.Physics_Sandbox.Comms.Vector3 size_;
    /**
     * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.Vector3 getSize() {
      return size_;
    }
    /**
     * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder getSizeOrBuilder() {
      return size_;
    }

    public static final int UOID_FIELD_NUMBER = 5;
    private long uOID_;
    /**
     * <code>required int64 UOID = 5;</code>
     */
    public boolean hasUOID() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 UOID = 5;</code>
     */
    public long getUOID() {
      return uOID_;
    }

    private void initFields() {
      type_ = io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType.CUBE;
      location_ = io.github.nickelme.Physics_Sandbox.Comms.Matrix4.getDefaultInstance();
      velocity_ = io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance();
      size_ = io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance();
      uOID_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUOID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasLocation()) {
        if (!getLocation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVelocity()) {
        if (!getVelocity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSize()) {
        if (!getSize().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, location_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, velocity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, size_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, uOID_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, location_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, velocity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, size_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, uOID_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSObject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.github.nickelme.Physics_Sandbox.Comms.PSObject prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Physics_Sandbox.PSObject}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Physics_Sandbox.PSObject)
        io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSObject_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSObject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.github.nickelme.Physics_Sandbox.Comms.PSObject.class, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder.class);
      }

      // Construct using io.github.nickelme.Physics_Sandbox.Comms.PSObject.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationFieldBuilder();
          getVelocityFieldBuilder();
          getSizeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType.CUBE;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (locationBuilder_ == null) {
          location_ = io.github.nickelme.Physics_Sandbox.Comms.Matrix4.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (velocityBuilder_ == null) {
          velocity_ = io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (sizeBuilder_ == null) {
          size_ = io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance();
        } else {
          sizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        uOID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSObject_descriptor;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSObject getDefaultInstanceForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.PSObject.getDefaultInstance();
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSObject build() {
        io.github.nickelme.Physics_Sandbox.Comms.PSObject result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSObject buildPartial() {
        io.github.nickelme.Physics_Sandbox.Comms.PSObject result = new io.github.nickelme.Physics_Sandbox.Comms.PSObject(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (velocityBuilder_ == null) {
          result.velocity_ = velocity_;
        } else {
          result.velocity_ = velocityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (sizeBuilder_ == null) {
          result.size_ = size_;
        } else {
          result.size_ = sizeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uOID_ = uOID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.github.nickelme.Physics_Sandbox.Comms.PSObject) {
          return mergeFrom((io.github.nickelme.Physics_Sandbox.Comms.PSObject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.github.nickelme.Physics_Sandbox.Comms.PSObject other) {
        if (other == io.github.nickelme.Physics_Sandbox.Comms.PSObject.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasVelocity()) {
          mergeVelocity(other.getVelocity());
        }
        if (other.hasSize()) {
          mergeSize(other.getSize());
        }
        if (other.hasUOID()) {
          setUOID(other.getUOID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUOID()) {
          
          return false;
        }
        if (hasLocation()) {
          if (!getLocation().isInitialized()) {
            
            return false;
          }
        }
        if (hasVelocity()) {
          if (!getVelocity().isInitialized()) {
            
            return false;
          }
        }
        if (hasSize()) {
          if (!getSize().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.github.nickelme.Physics_Sandbox.Comms.PSObject parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.github.nickelme.Physics_Sandbox.Comms.PSObject) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType type_ = io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType.CUBE;
      /**
       * <code>optional .Physics_Sandbox.PSObject.ObjectType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Physics_Sandbox.PSObject.ObjectType type = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType getType() {
        return type_;
      }
      /**
       * <code>optional .Physics_Sandbox.PSObject.ObjectType type = 1;</code>
       */
      public Builder setType(io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.PSObject.ObjectType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = io.github.nickelme.Physics_Sandbox.Comms.PSObject.ObjectType.CUBE;
        onChanged();
        return this;
      }

      private io.github.nickelme.Physics_Sandbox.Comms.Matrix4 location_ = io.github.nickelme.Physics_Sandbox.Comms.Matrix4.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.Matrix4, io.github.nickelme.Physics_Sandbox.Comms.Matrix4.Builder, io.github.nickelme.Physics_Sandbox.Comms.Matrix4OrBuilder> locationBuilder_;
      /**
       * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.Matrix4 getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
       */
      public Builder setLocation(io.github.nickelme.Physics_Sandbox.Comms.Matrix4 value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
       */
      public Builder setLocation(
          io.github.nickelme.Physics_Sandbox.Comms.Matrix4.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
       */
      public Builder mergeLocation(io.github.nickelme.Physics_Sandbox.Comms.Matrix4 value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              location_ != io.github.nickelme.Physics_Sandbox.Comms.Matrix4.getDefaultInstance()) {
            location_ =
              io.github.nickelme.Physics_Sandbox.Comms.Matrix4.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = io.github.nickelme.Physics_Sandbox.Comms.Matrix4.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.Matrix4.Builder getLocationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.Matrix4OrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>optional .Physics_Sandbox.Matrix4 Location = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.Matrix4, io.github.nickelme.Physics_Sandbox.Comms.Matrix4.Builder, io.github.nickelme.Physics_Sandbox.Comms.Matrix4OrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.github.nickelme.Physics_Sandbox.Comms.Matrix4, io.github.nickelme.Physics_Sandbox.Comms.Matrix4.Builder, io.github.nickelme.Physics_Sandbox.Comms.Matrix4OrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private io.github.nickelme.Physics_Sandbox.Comms.Vector3 velocity_ = io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.Vector3, io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder, io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder> velocityBuilder_;
      /**
       * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
       */
      public boolean hasVelocity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.Vector3 getVelocity() {
        if (velocityBuilder_ == null) {
          return velocity_;
        } else {
          return velocityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
       */
      public Builder setVelocity(io.github.nickelme.Physics_Sandbox.Comms.Vector3 value) {
        if (velocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocity_ = value;
          onChanged();
        } else {
          velocityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
       */
      public Builder setVelocity(
          io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder builderForValue) {
        if (velocityBuilder_ == null) {
          velocity_ = builderForValue.build();
          onChanged();
        } else {
          velocityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
       */
      public Builder mergeVelocity(io.github.nickelme.Physics_Sandbox.Comms.Vector3 value) {
        if (velocityBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              velocity_ != io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance()) {
            velocity_ =
              io.github.nickelme.Physics_Sandbox.Comms.Vector3.newBuilder(velocity_).mergeFrom(value).buildPartial();
          } else {
            velocity_ = value;
          }
          onChanged();
        } else {
          velocityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
       */
      public Builder clearVelocity() {
        if (velocityBuilder_ == null) {
          velocity_ = io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance();
          onChanged();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder getVelocityBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getVelocityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder getVelocityOrBuilder() {
        if (velocityBuilder_ != null) {
          return velocityBuilder_.getMessageOrBuilder();
        } else {
          return velocity_;
        }
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Velocity = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.Vector3, io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder, io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder> 
          getVelocityFieldBuilder() {
        if (velocityBuilder_ == null) {
          velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.github.nickelme.Physics_Sandbox.Comms.Vector3, io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder, io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder>(
                  getVelocity(),
                  getParentForChildren(),
                  isClean());
          velocity_ = null;
        }
        return velocityBuilder_;
      }

      private io.github.nickelme.Physics_Sandbox.Comms.Vector3 size_ = io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.Vector3, io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder, io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder> sizeBuilder_;
      /**
       * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.Vector3 getSize() {
        if (sizeBuilder_ == null) {
          return size_;
        } else {
          return sizeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
       */
      public Builder setSize(io.github.nickelme.Physics_Sandbox.Comms.Vector3 value) {
        if (sizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          size_ = value;
          onChanged();
        } else {
          sizeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
       */
      public Builder setSize(
          io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder builderForValue) {
        if (sizeBuilder_ == null) {
          size_ = builderForValue.build();
          onChanged();
        } else {
          sizeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
       */
      public Builder mergeSize(io.github.nickelme.Physics_Sandbox.Comms.Vector3 value) {
        if (sizeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              size_ != io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance()) {
            size_ =
              io.github.nickelme.Physics_Sandbox.Comms.Vector3.newBuilder(size_).mergeFrom(value).buildPartial();
          } else {
            size_ = value;
          }
          onChanged();
        } else {
          sizeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
       */
      public Builder clearSize() {
        if (sizeBuilder_ == null) {
          size_ = io.github.nickelme.Physics_Sandbox.Comms.Vector3.getDefaultInstance();
          onChanged();
        } else {
          sizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder getSizeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder getSizeOrBuilder() {
        if (sizeBuilder_ != null) {
          return sizeBuilder_.getMessageOrBuilder();
        } else {
          return size_;
        }
      }
      /**
       * <code>optional .Physics_Sandbox.Vector3 Size = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.Vector3, io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder, io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder> 
          getSizeFieldBuilder() {
        if (sizeBuilder_ == null) {
          sizeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.github.nickelme.Physics_Sandbox.Comms.Vector3, io.github.nickelme.Physics_Sandbox.Comms.Vector3.Builder, io.github.nickelme.Physics_Sandbox.Comms.Vector3OrBuilder>(
                  getSize(),
                  getParentForChildren(),
                  isClean());
          size_ = null;
        }
        return sizeBuilder_;
      }

      private long uOID_ ;
      /**
       * <code>required int64 UOID = 5;</code>
       */
      public boolean hasUOID() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 UOID = 5;</code>
       */
      public long getUOID() {
        return uOID_;
      }
      /**
       * <code>required int64 UOID = 5;</code>
       */
      public Builder setUOID(long value) {
        bitField0_ |= 0x00000010;
        uOID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 UOID = 5;</code>
       */
      public Builder clearUOID() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uOID_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Physics_Sandbox.PSObject)
    }

    static {
      defaultInstance = new PSObject(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Physics_Sandbox.PSObject)
  }

  public interface PSSendObjectsPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Physics_Sandbox.PSSendObjectsPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> 
        getObjectsList();
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.PSObject getObjects(int index);
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    int getObjectsCount();
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    java.util.List<? extends io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> 
        getObjectsOrBuilderList();
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder getObjectsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Physics_Sandbox.PSSendObjectsPacket}
   */
  public static final class PSSendObjectsPacket extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Physics_Sandbox.PSSendObjectsPacket)
      PSSendObjectsPacketOrBuilder {
    // Use PSSendObjectsPacket.newBuilder() to construct.
    private PSSendObjectsPacket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PSSendObjectsPacket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PSSendObjectsPacket defaultInstance;
    public static PSSendObjectsPacket getDefaultInstance() {
      return defaultInstance;
    }

    public PSSendObjectsPacket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PSSendObjectsPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                objects_ = new java.util.ArrayList<io.github.nickelme.Physics_Sandbox.Comms.PSObject>();
                mutable_bitField0_ |= 0x00000001;
              }
              objects_.add(input.readMessage(io.github.nickelme.Physics_Sandbox.Comms.PSObject.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          objects_ = java.util.Collections.unmodifiableList(objects_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSSendObjectsPacket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSSendObjectsPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.class, io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.Builder.class);
    }

    public static com.google.protobuf.Parser<PSSendObjectsPacket> PARSER =
        new com.google.protobuf.AbstractParser<PSSendObjectsPacket>() {
      public PSSendObjectsPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PSSendObjectsPacket(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PSSendObjectsPacket> getParserForType() {
      return PARSER;
    }

    public static final int OBJECTS_FIELD_NUMBER = 1;
    private java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> objects_;
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> getObjectsList() {
      return objects_;
    }
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public java.util.List<? extends io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> 
        getObjectsOrBuilderList() {
      return objects_;
    }
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public int getObjectsCount() {
      return objects_.size();
    }
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.PSObject getObjects(int index) {
      return objects_.get(index);
    }
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder getObjectsOrBuilder(
        int index) {
      return objects_.get(index);
    }

    private void initFields() {
      objects_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getObjectsCount(); i++) {
        if (!getObjects(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < objects_.size(); i++) {
        output.writeMessage(1, objects_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < objects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, objects_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Physics_Sandbox.PSSendObjectsPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Physics_Sandbox.PSSendObjectsPacket)
        io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSSendObjectsPacket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSSendObjectsPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.class, io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.Builder.class);
      }

      // Construct using io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getObjectsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          objectsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSSendObjectsPacket_descriptor;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket getDefaultInstanceForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.getDefaultInstance();
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket build() {
        io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket buildPartial() {
        io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket result = new io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket(this);
        int from_bitField0_ = bitField0_;
        if (objectsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            objects_ = java.util.Collections.unmodifiableList(objects_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.objects_ = objects_;
        } else {
          result.objects_ = objectsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket) {
          return mergeFrom((io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket other) {
        if (other == io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.getDefaultInstance()) return this;
        if (objectsBuilder_ == null) {
          if (!other.objects_.isEmpty()) {
            if (objects_.isEmpty()) {
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureObjectsIsMutable();
              objects_.addAll(other.objects_);
            }
            onChanged();
          }
        } else {
          if (!other.objects_.isEmpty()) {
            if (objectsBuilder_.isEmpty()) {
              objectsBuilder_.dispose();
              objectsBuilder_ = null;
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000001);
              objectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getObjectsFieldBuilder() : null;
            } else {
              objectsBuilder_.addAllMessages(other.objects_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getObjectsCount(); i++) {
          if (!getObjects(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> objects_ =
        java.util.Collections.emptyList();
      private void ensureObjectsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          objects_ = new java.util.ArrayList<io.github.nickelme.Physics_Sandbox.Comms.PSObject>(objects_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.PSObject, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder, io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> objectsBuilder_;

      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> getObjectsList() {
        if (objectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(objects_);
        } else {
          return objectsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public int getObjectsCount() {
        if (objectsBuilder_ == null) {
          return objects_.size();
        } else {
          return objectsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObject getObjects(int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);
        } else {
          return objectsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder setObjects(
          int index, io.github.nickelme.Physics_Sandbox.Comms.PSObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.set(index, value);
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder setObjects(
          int index, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addObjects(io.github.nickelme.Physics_Sandbox.Comms.PSObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addObjects(
          int index, io.github.nickelme.Physics_Sandbox.Comms.PSObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(index, value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addObjects(
          io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addObjects(
          int index, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addAllObjects(
          java.lang.Iterable<? extends io.github.nickelme.Physics_Sandbox.Comms.PSObject> values) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, objects_);
          onChanged();
        } else {
          objectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder clearObjects() {
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          objectsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder removeObjects(int index) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.remove(index);
          onChanged();
        } else {
          objectsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder getObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder getObjectsOrBuilder(
          int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);  } else {
          return objectsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public java.util.List<? extends io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> 
           getObjectsOrBuilderList() {
        if (objectsBuilder_ != null) {
          return objectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(objects_);
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder addObjectsBuilder() {
        return getObjectsFieldBuilder().addBuilder(
            io.github.nickelme.Physics_Sandbox.Comms.PSObject.getDefaultInstance());
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder addObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().addBuilder(
            index, io.github.nickelme.Physics_Sandbox.Comms.PSObject.getDefaultInstance());
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder> 
           getObjectsBuilderList() {
        return getObjectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.PSObject, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder, io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> 
          getObjectsFieldBuilder() {
        if (objectsBuilder_ == null) {
          objectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.github.nickelme.Physics_Sandbox.Comms.PSObject, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder, io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder>(
                  objects_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          objects_ = null;
        }
        return objectsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Physics_Sandbox.PSSendObjectsPacket)
    }

    static {
      defaultInstance = new PSSendObjectsPacket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Physics_Sandbox.PSSendObjectsPacket)
    public static final int PACKET_FIELD_NUMBER = 100;
    /**
     * <code>extend .Physics_Sandbox.PSPacket { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        io.github.nickelme.Physics_Sandbox.Comms.PSPacket,
        io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket> packet = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.getDefaultInstance(),
          0,
          io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.class,
          io.github.nickelme.Physics_Sandbox.Comms.PSSendObjectsPacket.getDefaultInstance());
  }

  public interface PSUpdateObjectsPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Physics_Sandbox.PSUpdateObjectsPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> 
        getObjectsList();
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.PSObject getObjects(int index);
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    int getObjectsCount();
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    java.util.List<? extends io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> 
        getObjectsOrBuilderList();
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder getObjectsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Physics_Sandbox.PSUpdateObjectsPacket}
   */
  public static final class PSUpdateObjectsPacket extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Physics_Sandbox.PSUpdateObjectsPacket)
      PSUpdateObjectsPacketOrBuilder {
    // Use PSUpdateObjectsPacket.newBuilder() to construct.
    private PSUpdateObjectsPacket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PSUpdateObjectsPacket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PSUpdateObjectsPacket defaultInstance;
    public static PSUpdateObjectsPacket getDefaultInstance() {
      return defaultInstance;
    }

    public PSUpdateObjectsPacket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PSUpdateObjectsPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                objects_ = new java.util.ArrayList<io.github.nickelme.Physics_Sandbox.Comms.PSObject>();
                mutable_bitField0_ |= 0x00000001;
              }
              objects_.add(input.readMessage(io.github.nickelme.Physics_Sandbox.Comms.PSObject.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          objects_ = java.util.Collections.unmodifiableList(objects_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSUpdateObjectsPacket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSUpdateObjectsPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.class, io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.Builder.class);
    }

    public static com.google.protobuf.Parser<PSUpdateObjectsPacket> PARSER =
        new com.google.protobuf.AbstractParser<PSUpdateObjectsPacket>() {
      public PSUpdateObjectsPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PSUpdateObjectsPacket(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PSUpdateObjectsPacket> getParserForType() {
      return PARSER;
    }

    public static final int OBJECTS_FIELD_NUMBER = 1;
    private java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> objects_;
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> getObjectsList() {
      return objects_;
    }
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public java.util.List<? extends io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> 
        getObjectsOrBuilderList() {
      return objects_;
    }
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public int getObjectsCount() {
      return objects_.size();
    }
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.PSObject getObjects(int index) {
      return objects_.get(index);
    }
    /**
     * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
     */
    public io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder getObjectsOrBuilder(
        int index) {
      return objects_.get(index);
    }

    private void initFields() {
      objects_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getObjectsCount(); i++) {
        if (!getObjects(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < objects_.size(); i++) {
        output.writeMessage(1, objects_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < objects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, objects_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Physics_Sandbox.PSUpdateObjectsPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Physics_Sandbox.PSUpdateObjectsPacket)
        io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSUpdateObjectsPacket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSUpdateObjectsPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.class, io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.Builder.class);
      }

      // Construct using io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getObjectsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          objectsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.internal_static_Physics_Sandbox_PSUpdateObjectsPacket_descriptor;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket getDefaultInstanceForType() {
        return io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.getDefaultInstance();
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket build() {
        io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket buildPartial() {
        io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket result = new io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket(this);
        int from_bitField0_ = bitField0_;
        if (objectsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            objects_ = java.util.Collections.unmodifiableList(objects_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.objects_ = objects_;
        } else {
          result.objects_ = objectsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket) {
          return mergeFrom((io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket other) {
        if (other == io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.getDefaultInstance()) return this;
        if (objectsBuilder_ == null) {
          if (!other.objects_.isEmpty()) {
            if (objects_.isEmpty()) {
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureObjectsIsMutable();
              objects_.addAll(other.objects_);
            }
            onChanged();
          }
        } else {
          if (!other.objects_.isEmpty()) {
            if (objectsBuilder_.isEmpty()) {
              objectsBuilder_.dispose();
              objectsBuilder_ = null;
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000001);
              objectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getObjectsFieldBuilder() : null;
            } else {
              objectsBuilder_.addAllMessages(other.objects_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getObjectsCount(); i++) {
          if (!getObjects(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> objects_ =
        java.util.Collections.emptyList();
      private void ensureObjectsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          objects_ = new java.util.ArrayList<io.github.nickelme.Physics_Sandbox.Comms.PSObject>(objects_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.PSObject, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder, io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> objectsBuilder_;

      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject> getObjectsList() {
        if (objectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(objects_);
        } else {
          return objectsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public int getObjectsCount() {
        if (objectsBuilder_ == null) {
          return objects_.size();
        } else {
          return objectsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObject getObjects(int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);
        } else {
          return objectsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder setObjects(
          int index, io.github.nickelme.Physics_Sandbox.Comms.PSObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.set(index, value);
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder setObjects(
          int index, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addObjects(io.github.nickelme.Physics_Sandbox.Comms.PSObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addObjects(
          int index, io.github.nickelme.Physics_Sandbox.Comms.PSObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(index, value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addObjects(
          io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addObjects(
          int index, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder addAllObjects(
          java.lang.Iterable<? extends io.github.nickelme.Physics_Sandbox.Comms.PSObject> values) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, objects_);
          onChanged();
        } else {
          objectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder clearObjects() {
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          objectsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public Builder removeObjects(int index) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.remove(index);
          onChanged();
        } else {
          objectsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder getObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder getObjectsOrBuilder(
          int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);  } else {
          return objectsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public java.util.List<? extends io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> 
           getObjectsOrBuilderList() {
        if (objectsBuilder_ != null) {
          return objectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(objects_);
        }
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder addObjectsBuilder() {
        return getObjectsFieldBuilder().addBuilder(
            io.github.nickelme.Physics_Sandbox.Comms.PSObject.getDefaultInstance());
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder addObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().addBuilder(
            index, io.github.nickelme.Physics_Sandbox.Comms.PSObject.getDefaultInstance());
      }
      /**
       * <code>repeated .Physics_Sandbox.PSObject objects = 1;</code>
       */
      public java.util.List<io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder> 
           getObjectsBuilderList() {
        return getObjectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.github.nickelme.Physics_Sandbox.Comms.PSObject, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder, io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder> 
          getObjectsFieldBuilder() {
        if (objectsBuilder_ == null) {
          objectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.github.nickelme.Physics_Sandbox.Comms.PSObject, io.github.nickelme.Physics_Sandbox.Comms.PSObject.Builder, io.github.nickelme.Physics_Sandbox.Comms.PSObjectOrBuilder>(
                  objects_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          objects_ = null;
        }
        return objectsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Physics_Sandbox.PSUpdateObjectsPacket)
    }

    static {
      defaultInstance = new PSUpdateObjectsPacket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Physics_Sandbox.PSUpdateObjectsPacket)
    public static final int PACKET_FIELD_NUMBER = 101;
    /**
     * <code>extend .Physics_Sandbox.PSPacket { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        io.github.nickelme.Physics_Sandbox.Comms.PSPacket,
        io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket> packet = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.getDefaultInstance(),
          0,
          io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.class,
          io.github.nickelme.Physics_Sandbox.Comms.PSUpdateObjectsPacket.getDefaultInstance());
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Physics_Sandbox_PSPacket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Physics_Sandbox_PSPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Physics_Sandbox_Vector3_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Physics_Sandbox_Vector3_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Physics_Sandbox_Matrix4_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Physics_Sandbox_Matrix4_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Physics_Sandbox_PSObject_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Physics_Sandbox_PSObject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Physics_Sandbox_PSSendObjectsPacket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Physics_Sandbox_PSSendObjectsPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Physics_Sandbox_PSUpdateObjectsPacket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Physics_Sandbox_PSUpdateObjectsPacket_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Comms.proto\022\017Physics_Sandbox\"\200\001\n\010PSPac" +
      "ket\0226\n\010PacketId\030\001 \002(\0162$.Physics_Sandbox." +
      "PSPacket.PacketType\"2\n\nPacketType\022\020\n\014SEN" +
      "D_OBJECTS\020\000\022\022\n\016UPDATE_OBJECTS\020\001*\010\010d\020\200\200\200\200" +
      "\002\"*\n\007Vector3\022\t\n\001X\030\001 \002(\002\022\t\n\001Y\030\002 \002(\002\022\t\n\001Z\030" +
      "\003 \002(\002\"\331\001\n\007Matrix4\022\013\n\003m00\030\001 \002(\002\022\013\n\003m01\030\002 " +
      "\002(\002\022\013\n\003m02\030\003 \002(\002\022\013\n\003m03\030\004 \002(\002\022\013\n\003m10\030\005 \002" +
      "(\002\022\013\n\003m11\030\006 \002(\002\022\013\n\003m12\030\007 \002(\002\022\013\n\003m13\030\010 \002(" +
      "\002\022\013\n\003m20\030\t \002(\002\022\013\n\003m21\030\n \002(\002\022\013\n\003m22\030\013 \002(\002" +
      "\022\013\n\003m23\030\014 \002(\002\022\013\n\003m30\030\r \002(\002\022\013\n\003m31\030\016 \002(\002\022",
      "\013\n\003m32\030\017 \002(\002\022\013\n\003m33\030\020 \002(\002\"\360\001\n\010PSObject\0222" +
      "\n\004type\030\001 \001(\0162$.Physics_Sandbox.PSObject." +
      "ObjectType\022*\n\010Location\030\002 \001(\0132\030.Physics_S" +
      "andbox.Matrix4\022*\n\010Velocity\030\003 \001(\0132\030.Physi" +
      "cs_Sandbox.Vector3\022&\n\004Size\030\004 \001(\0132\030.Physi" +
      "cs_Sandbox.Vector3\022\014\n\004UOID\030\005 \002(\003\"\"\n\nObje" +
      "ctType\022\010\n\004CUBE\020\000\022\n\n\006SPHERE\020\001\"\222\001\n\023PSSendO" +
      "bjectsPacket\022*\n\007objects\030\001 \003(\0132\031.Physics_" +
      "Sandbox.PSObject2O\n\006packet\022\031.Physics_San" +
      "dbox.PSPacket\030d \001(\0132$.Physics_Sandbox.PS",
      "SendObjectsPacket\"\226\001\n\025PSUpdateObjectsPac" +
      "ket\022*\n\007objects\030\001 \003(\0132\031.Physics_Sandbox.P" +
      "SObject2Q\n\006packet\022\031.Physics_Sandbox.PSPa" +
      "cket\030e \001(\0132&.Physics_Sandbox.PSUpdateObj" +
      "ectsPacketB+\n\"io.github.nickelme.Physics" +
      "_SandboxB\005Comms"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Physics_Sandbox_PSPacket_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Physics_Sandbox_PSPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Physics_Sandbox_PSPacket_descriptor,
        new java.lang.String[] { "PacketId", });
    internal_static_Physics_Sandbox_Vector3_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Physics_Sandbox_Vector3_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Physics_Sandbox_Vector3_descriptor,
        new java.lang.String[] { "X", "Y", "Z", });
    internal_static_Physics_Sandbox_Matrix4_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Physics_Sandbox_Matrix4_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Physics_Sandbox_Matrix4_descriptor,
        new java.lang.String[] { "M00", "M01", "M02", "M03", "M10", "M11", "M12", "M13", "M20", "M21", "M22", "M23", "M30", "M31", "M32", "M33", });
    internal_static_Physics_Sandbox_PSObject_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Physics_Sandbox_PSObject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Physics_Sandbox_PSObject_descriptor,
        new java.lang.String[] { "Type", "Location", "Velocity", "Size", "UOID", });
    internal_static_Physics_Sandbox_PSSendObjectsPacket_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Physics_Sandbox_PSSendObjectsPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Physics_Sandbox_PSSendObjectsPacket_descriptor,
        new java.lang.String[] { "Objects", });
    internal_static_Physics_Sandbox_PSUpdateObjectsPacket_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Physics_Sandbox_PSUpdateObjectsPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Physics_Sandbox_PSUpdateObjectsPacket_descriptor,
        new java.lang.String[] { "Objects", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
